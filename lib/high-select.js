!function(){const t={ENTER:13,ESC:27,ARROW_LEFT:37,ARROW_UP:38,ARROW_RIGHT:39,ARROW_DOWN:40,HOME:36,END:35},e=t=>t>47&&t<58||32==t||t>64&&t<91||t>95&&t<112||t>185&&t<193||t>218&&t<223,i=document.createElement("template");i.innerHTML='\n        <style>\n            :host {\n                display: inline-block;\n                position: relative;\n                user-select: none;\n                outline-width: 0px;\n                text-align: justify;\n            }\n        \n            #caller {\n                display: flex;\n                padding: var(--caller-padding, 3px 6px);\n                background: var(--caller-background, #fff);\n                color: var(--caller-color, inherit);\n                white-space: nowrap;\n                box-shadow: var(--caller-shadow, 0px 0px 2px #666, inset 0px 0px 5px 0px #eee);\n                border-radius: var(--caller-border-radius, 3px);\n                height: inherit;\n                width: inherit;\n                align-items: center;\n            }\n            #caller :first-child{ \n                position: relative;\n                width: inherit;\n                overflow-x: hidden;\n            }\n            :host([disabled]) #caller {\n                color: var(--caller-disabled-color, #aaa);\n                background: var(--caller-disabled-background, #eee);\n            }\n            :host(:not([disabled])) #caller:hover{\n                cursor: var(--caller-hover-cursor, pointer);\n                background: var(--caller-hover-background, #fcfcfc);\n                color: var(--caller-hover-color, #000);\n            }\n            :host(:not([disabled]):focus) #caller{\n                outline: var(--caller-focus-outline, rgb(229, 151, 0) auto 1px);\n            }\n            \n            :host([arrow]) #arrow {\n                line-height: 20px;\n                font-size: var(--arrow-font-size, 18px);\n                margin: var(--arrow-margin, 0px 3px);\n                color: var(--arrow-color, #000);\n            }\n            :host([arrow]):host([expanded]) #arrow > span {\n                transform: rotate(-90deg);\n                left: 0px;\n                top: 0px;\n            }\t\t\n            :host([arrow]) #arrow > span {\n                position: relative;\n                display: block;\n                top: 0px;\n                left: 3.5px;\n                transform: rotate(90deg);\n            }\n            :host([animated]) #arrow > span {\n                transition: transform var(--animated-time, 0.15s) linear;\n            }\n            :host(:not([arrow])) #arrow {\n                display: none;\n            }\n\n            #bigot {\n                position: fixed;\n                box-shadow: var(--bigot-shadow, 0px 0px 6px #ccc);\n                background: var(--bigot-background, #fff);\n                border: var(--bigot-border, 1px solid #ccc);\n                z-index: 3;\n                transition: visibility 0s linear var(--animated-time, 0.15s), opacity var(--animated-time, 0.15s) linear;\n            }\n            :host([animated]):host(:not([expanded])) #bigot {\n                visibility: hidden;\n                opacity: 0;\n            }\n            :host([animated]):host([expanded]) #bigot {\n                visibility: visible;\n                opacity: 1;\n                transition-delay: 0s;\n            }\n    \n            #holder {\n                overflow-y: auto;\n            }\n            \n            :host(:not([search])) #search{\n                display: none;\n            }\n            #search {\n                line-height: normal;\n            }\n            #search input[type=text]{\n                outline: var(--input-outline, 0px solid #aaa);\n                margin: var(--input-margin, 0px);\n                width: var(--input-width, 98%);\n                border-width: var(--input-border-width, 0px 0px 1px 0px);\n                border-color: var(--input-border-color, #ccc);\n                border-style: var(--input-border-style, solid);\n                font: var(--input-font, 12pt arial);\n                padding: var(--input-padding, 2px 1%);\n                color: var(--input-color, #000);\n                background: var(--input-background, #fff);\n            }\n    \n            ::slotted(high-option), high-option{\n                display: block;\n                cursor: pointer;\n                padding: var(--option-padding, 3px 6px);\n                border: var(--option-border, none);\n                height: auto;\n                line-height: normal;\n\t\t\t\ttransition: all 0.1s linear;\n            }\n            ::slotted(high-option:hover) {\n                background: var(--option-hover-background, #fff);\n                color: var(--option-hover-color, #000);\n            }\n            ::slotted(high-option[hidden]){\n                display: none;\n            }\n            ::slotted([disabled]){\n                background: var(--option-disabled-background, #f9f9f9);\n                color: var(--option-disabled-color, #ddd);\n            }\n            ::slotted(:not([considered])):hover {\n                background: rgba(238, 238, 238, 0.767);\n\n            }\n            ::slotted(high-option[considered]){\n                background: var(--option-active-background, #0080ff);\n                color: var(--option-active-color, #000);\n            }\n            ::slotted(high-option[selected]){\n                background: var(--option-selected-background, #eee);\n                color: var(--option-selected-color, #000);\n            }\n            \n            :host-context(.dark){\n                color: #e5c070;\n            }\n            \n            :host-context(.dark) #caller{\n                background: #282c34;\n                box-shadow: 0px 0px 2px #000, inset 0px 0px 5px 0px #21252b;\n            }\n            \n            :host-context(.dark:not([disabled])) #caller:hover{\n                background: #21252b;\n                color: #e5c070;\n            }\n            \n            :host-context(.dark[arrow]) #arrow {\n                color: #e5c070;\n            }\n            \n            :host-context(.dark) #bigot {\n                box-shadow: 0px 0px 6px #000;\n                background: #282c34;\n                border: 1px solid #000;\n            }\n            :host-context(.dark) #search input[type=text]{\n                border-color: #666;\n                background: #282c34;\n                color: #e5c070;\n            }\n            :host-context(.dark) ::slotted([disabled]){\n                background: #32363e; color: #4e5562;\n            }:host-context(.dark) ::slotted(high-option[considered]){\n                background: #e5c070; color: #282c34;\n            }:host-context(.dark) ::slotted(high-option[selected]:not([considered])){\n                background: #373c44; color: #89bd55;\n            }\n        </style>\n        <div id="caller">\n            <span id="chosen"></span> <span id="arrow"><span>&#8250;</span></span>\n        </div>\n        <section id="bigot">\n            <div id="search">\n                <input type="text" spellcheck="false" tabindex="-1">\n            </div>\n            <div id="holder">\n                <slot name="option" maxlength="20"></slot>\n            </div>\n        </section>\n    ';customElements.define("high-select",class extends HTMLElement{static get observedAttributes(){return["expanded","disabled"]}set value(t){if("string"==typeof t||"number"==typeof t){const e=this._allValidOptions();for(let i of e)if(i.value==t)return void(i.selected=!0)}}get value(){return this._selectedOption?this._selectedOption.value:""}set expanded(t){Boolean(t)?this.setAttribute("expanded",""):this.removeAttribute("expanded")}get expanded(){return this.hasAttribute("expanded")}set disabled(t){Boolean(t)?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get disabled(){return this.hasAttribute("disabled")}constructor(){super(),this._onSlotChange=this._onSlotChange.bind(this),this._onCallerClick=this._onCallerClick.bind(this),this._onKeyUp=this._onKeyUp.bind(this),this.attachShadow({mode:"open"}),this.shadowRoot.appendChild(i.content.cloneNode(!0)),this._optionSlot=this.shadowRoot.querySelector("slot[name=option]"),this.caller=this.shadowRoot.querySelector("#caller"),this.chosen=this.caller.firstElementChild,this.arrowElm=this.caller.children[1],this.bigot=this.shadowRoot.querySelector("#bigot"),this.searchElm=this.bigot.firstElementChild,this.input=this.searchElm.firstElementChild,this.holder=this.bigot.children[1],this._animated=this.hasAttribute("animated"),this._optionSlot.addEventListener("slotchange",this._onSlotChange),this.caller.addEventListener("click",this._onCallerClick),this.input.addEventListener("keyup",this._onKeyUp),document.addEventListener("scroll",function(){this.expanded&&(this.expanded=!1,this.focus())}.bind(this)),this._animated||this._setHidden(!0)}connectedCallback(){this.addEventListener("blur",this._onBlur),this.addEventListener("mousedown",this._onMouseDown),this.addEventListener("mouseup",this._onMouseUp),this.addEventListener("keydown",this._onKeyDown),customElements.whenDefined("high-option").then(t=>{this._initializing()})}disconnectedCallback(){this.caller.removeEventListener("click",this._onCallerClick),this.input.removeEventListener("keyup",this._onKeyUp),this.removeEventListener("blur",this._onBlur),this.removeEventListener("mousedown",this._onMouseDown),this.removeEventListener("mouseup",this._onMouseUp),this.removeEventListener("keydown",this._onKeyDown)}attributeChangedCallback(){this.expanded?this._expand():this._collapse(),this.disabled?(this.blur(),this.setAttribute("tabindex","-1")):this.setAttribute("tabindex",0)}_onSlotChange(){this._initializing()}_onCallerClick(){this._toggle()}_onMouseDown(t){let e=t.target.closest("high-option");this._isValidAndEnabled(e)&&(e.considered=!0)}_onMouseUp(t){const e=t.target.closest("high-option");this._isValidAndEnabled(e)&&(this._select(e),this.expanded=!1)}_onKeyDown(i){let n;switch(i.keyCode){case t.HOME:i.preventDefault(),(n=this._firstOption())&&(this.expanded?n.considered=!0:this._select(n));break;case t.ARROW_UP:i.preventDefault(),(n=this._previousOption())&&(this.expanded?n.considered=!0:this._select(n));break;case t.ARROW_DOWN:i.preventDefault(),(n=this._nextOption())&&(this.expanded?n.considered=!0:this._select(n));break;case t.END:i.preventDefault(),(n=this._lastOption())&&(this.expanded?n.considered=!0:this._select(n));break;case t.ESC:i.preventDefault(),this.expanded=!1,this.focus();break;case t.ENTER:i.preventDefault(),this.expanded?this._consideredOption&&(this._select(this._consideredOption),this.expanded=!1,this.focus()):this.expanded=!0;break;default:this.expanded||e(i.keyCode)&&(this.input.focus(),this.expanded=!0)}}_onKeyUp(t){t.target.value!==this._searchContent&&(this._searching(t.target.value.trim().toLowerCase()),this._searchContent=t.target.value)}_onBlur(){this.expanded=!1}_initializing(){const t=this._allOptions();!this._selectedOption&&t.length&&(this._firstOption().selected=!0),this.hasAttribute("tabindex")||this.setAttribute("tabindex","0"),this.options=t}_expand(){this._setHidden(!1),this._attachBigotToCaller(),this.input.focus(),this._selectedOption&&this._selectedOption.scrollIntoView({block:"center"})}_collapse(){this._setHidden(!0),this._releaseBigot(),this._consideredOption&&(this._consideredOption.considered=!1,this._consideredOption=null),this._resetSearch()}_setHidden(t){this._animated||(this.bigot.hidden=t)}_toggle(){this.expanded=!this.expanded}_select(t){this._isValidAndEnabled(t)&&t!==this._selectedOption&&(t.selected=!0,this._createChangeEvent())}_transcend(t){this._isValidAndEnabled(t)&&this._selectedOption!==t&&(this._selectedOption&&(this._selectedOption.selected=!1),this._selectedOption=t,this.chosen.innerHTML=t.content)}_consider(t){this._isValidOption(t)&&this._consideredOption!==t&&(this._consideredOption&&(this._consideredOption.considered=!1),this._consideredOption=t,t.scrollIntoView({block:"nearest"}))}_searching(t){let e,i,n;for(n of this.options)this._isValidOption(n)&&(e=-1===n.record.toLowerCase().indexOf(t)),i=-1===n.innerText.toLowerCase().indexOf(t),n.hidden=i&&e;if(!this._isValidAndEnabledAndVisible(this._consideredOption)&&!this._isValidAndEnabledAndVisible(this._selectedOption)){const t=this._firstOption();t&&(t.considered=!0)}}_resetSearch(){if(this.input.value){this.input.value="",this._searchContent="";for(let t of this.options)t.hidden=!1}}_isValidOption(t){return t instanceof n&&"high-option"===t.tagName.toLowerCase()}_isValidAndEnabled(t){return this._isValidOption(t)&&!t.disabled}_isValidAndEnabledAndVisible(t){return this._isValidAndEnabled(t)&&!t.hidden}_allOptions(){return Array.from(this.children)}_allValidOptions(){return Array.from(this.querySelectorAll("high-option:not([hidden]):not([disabled])"))}_firstOption(){return this.querySelector("high-option:not([disabled]):not([hidden])")}_nextOption(){const t=this._consideredOption||this._selectedOption;if(!this._isValidAndEnabled(t)||t.hidden)return this._firstOption();{let e=t.nextElementSibling;for(;e;){if(!e.hidden&&this._isValidAndEnabled(e))return e;e=e.nextElementSibling}}}_previousOption(){const t=this._consideredOption||this._selectedOption;if(!this._isValidAndEnabled(t)||t.hidden)return this._lastOption();{let e=t.previousElementSibling;for(;e;){if(!e.hidden&&this._isValidAndEnabled(e))return e;e=e.previousElementSibling}}}_lastOption(){const t=this._allValidOptions();return Object.values(t)[t.length-1]}_attachBigotToCaller(){const t=this.caller.getBoundingClientRect(),e=this.bigot.getBoundingClientRect(),i=t.top,n=window.innerHeight-t.bottom,s=i+t.height,o=n+t.height;this.bigot.style.minWidth=t.width+"px",n<e.height?i>n?(this.bigot.style.bottom=o+"px",i<e.height&&(this.holder.style.maxHeight=i-this.searchElm.clientHeight-10+"px")):(this.bigot.style.top=s+"px",this.holder.style.maxHeight=n-this.searchElm.clientHeight-10+"px"):this.bigot.style.top=s+"px",e.right>window.innerWidth&&(this.bigot.style.right="0px"),e.left<0&&(this.bigot.style.left="0px")}_releaseBigot(){this._animated||(this.holder.style.maxHeight="none",this.bigot.style.top="auto",this.bigot.style.bottom="auto",this.bigot.style.left="auto",this.bigot.style.right="auto")}_createChangeEvent(){const t=new CustomEvent("change",{target:this,bubbles:!0});this.dispatchEvent(t)}});class n extends HTMLElement{static get observedAttributes(){return["selected","considered","disabled"]}set selected(t){Boolean(t)?this.setAttribute("selected",""):this.removeAttribute("selected")}get selected(){return this.hasAttribute("selected")}set considered(t){Boolean(t)?this.setAttribute("considered",""):this.removeAttribute("considered")}get considered(){return this.hasAttribute("considered")}set disabled(t){Boolean(t)?this.setAttribute("disabled",""):this.removeAttribute("disabled")}get disabled(){return this.hasAttribute("disabled")}set value(t){t?this.setAttribute("value",t):this.removeAttribute("value")}get value(){if(this.hasAttribute("value"))return this.getAttribute("value");{const t=this.innerText.trim().toLowerCase();return t||this.title}}set title(t){t?this.setAttribute("title",t):this.removeAttribute("title")}get title(){return this.hasAttribute("title")?this.getAttribute("title"):""}set record(t){t?this.setAttribute("record",t):this.removeAttribute("record")}get record(){return this.hasAttribute("record")?this.getAttribute("record"):this.title}set slot(t){this.setAttribute("slot","option")}get slot(){return this.hasAttribute("slot")?this.getAttribute("slot"):""}get content(){return this.title?this.title:this.innerHTML}constructor(){super()}connectedCallback(){"option"!==this.slot&&(this.slot=""),this._upgradeProperty("selected"),this._upgradeProperty("considered"),this._upgradeProperty("disabled")}attributeChangedCallback(){const t=this._haveValidParent()&&!this.disabled;this.selected&&t&&this.parentNode._transcend(this),this.considered&&t&&this.parentNode._consider(this),this.disabled&&(this.selected=!1,this.considered=!1)}_upgradeProperty(t){if(this.hasOwnProperty(t)){let e=this[t];delete this[t],this[t]=e}}_haveValidParent(){return!!this.parentNode&&"high-select"===this.parentNode.tagName.toLowerCase()}}customElements.define("high-option",n)}();
